package acwin;

import cn.hutool.core.date.DateUtil;
import cn.hutool.core.date.StopWatch;

import java.util.ArrayList;
import java.util.List;


/**
 * 牛客：串的价值
 * https://www.nowcoder.com/questionTerminal/16976852ad2f4e26a1ff9f555234cab2
 */
public class OneZeroStringValue {

    public static void main(String[] args) {
        String input

        StringBuilder sb = new StringBuilder();

        for (int i = 0; i < 1000; i++) {
            if (Math.random() < 0.1) {
                sb.append(1);
            }else
                sb.append(0);
        }
        input = sb.toString();


        StopWatch watch = DateUtil.createStopWatch();

        watch.start("方法1");
        calcMax(calc(input));
        watch.stop();

        watch.start("方法2");
        run(input);
        watch.stop();

        System.out.println(watch.prettyPrint());
    }

    private static void run(String input) {
//        Scanner sc = new Scanner(System.in);
        //串的长度
//        int n = sc.nextInt();
//        char[] str = sc.next().toCharArray();
//        String input = "1111100110000001100";
        // res = 111110000000000
//        String input
        char[] str = input.toCharArray();
        int n = str.length;

        calcMaxVal(str, n);
    }

    private static int calcMaxVal(char[] str, int n) {
        //dp[i]表示前i + 1个字符的最大价值
        int[] dp = new int[n];
        //第一个字符价值为1
        dp[0] = 1;

        for (int i = 1; i < n; i++) {
            // 至少等于前面长度的价值加1
            dp[i] = dp[i - 1] + 1;
            int cnt = 1;
            for (int j = i - 1; j >= 0; j--) {
                if (str[j] == str[i]) {
                    cnt++;
                } else {
                    dp[i] = Math.max(dp[j] + (cnt + 1) * cnt / 2, dp[i]);
                }
            }
            dp[i] = Math.max((cnt + 1) * cnt / 2, dp[i]);
        }
//        System.out.println(dp[n - 1]);
        return dp[n - 1];
    }

    private static int calcMax(P[] arr) {
        int len = arr.length;
        int[] dp = new int[len];
        dp[0] = arr[0].count * (arr[0].count + 1) / 2;

        for (int i = 1; i < len;i++) {
            // 至少等于前面长度的价值加1
            dp[i] = dp[i - 1] + arr[i].count;
            int cnt = arr[i].count;
            for (int j = i - 1; j >= 0; j--) {
                if (arr[j].val == arr[i].val) {
                    cnt += arr[j].count;
                } else {
                    dp[i] = Math.max(dp[j] + (cnt + 1) * cnt / 2, dp[i]);

                }
            }
            dp[i] = Math.max((cnt + 1) * cnt / 2, dp[i]);
        }

//        System.out.println(dp[len - 1]);
//        System.out.println(Arrays.toString(dp));

        return 0;
    }

    private static P[] calc(String input) {
//        System.out.println(input.length());
        List<P> list = new ArrayList<>();
        char flag = '#';
        int cnt = 0;
        for (int i = 0; i < input.length(); i++) {
            if (input.charAt(i) != flag) {
                if (flag != '#') {
                    list.add(new P(flag - '0', cnt));
                }
                flag = input.charAt(i);
                cnt = 1;
            } else {
                cnt++;
            }
        }
        list.add(new P(flag - '0', cnt));
//        System.out.println(list);
        return list.toArray(new P[list.size()]);
    }
}
class P {
    int val;
    int count;
    public P(int _val, int _count) {
        val = _val;
        count = _count;
    }

    public String toString() {
        return val + ":"+ count;
    }
}